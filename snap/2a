demo/2.t.c:11:	OK(!bool_t)
demo/2.t.c:12:	OK(bool_f)
demo/2.t.c:14:	OK(0)
demo/2.t.c:15:	OK(!1)
demo/2.t.c:16:	OK(1 != 1)
demo/2.t.c:17:	OK(0 == 1)
demo/2.t.c:19:	Custom fail message
demo/2.t.c:20:	Custom fail message
demo/2.t.c:6:	TEST booleans
demo/2.t.c:28:	OK(123 != 123)
demo/2.t.c:29:	OK(num != 123)
demo/2.t.c:30:	OK(num != num)
demo/2.t.c:31:	OK(num <= 100)
demo/2.t.c:33:	OK(1.23 != 1.23)
demo/2.t.c:34:	OK(fnum != 0.1 + 0.2)
demo/2.t.c:35:	OK(fnum != fnum)
demo/2.t.c:37:	OK(123 == 456)
demo/2.t.c:38:	OK(num == 456)
demo/2.t.c:40:	OK(1.23 == -1.23)
demo/2.t.c:41:	OK(0.3 == 0.1 + 0.2)
demo/2.t.c:42:	OK(fnum == num)
demo/2.t.c:23:	TEST numbers
	 First incorrect byte: 11
	"Lorem ipsum"
	"Lorem ipsum"
demo/2.t.c:49:	NEQ("Lorem ipsum", "Lorem ipsum", -1)
	 First incorrect byte: 11
	"Lorem ipsum"
	"Lorem ipsum"
demo/2.t.c:50:	NEQ(str, "Lorem ipsum", -1)
	 First incorrect byte: 11
	"Lorem ipsum"
	"Lorem ipsum"
demo/2.t.c:51:	NEQ(str, str, -1)
	 First incorrect byte: 0
	""
	""
demo/2.t.c:52:	NEQ(NULL, NULL, -1)
	 First incorrect byte: 0
	"Lorem ipsum"
	""
demo/2.t.c:54:	EQ(str, NULL, -1)
	 First incorrect byte: 0
	"Lorem ipsum"
	""
demo/2.t.c:55:	EQ("Lorem ipsum", NULL, -1)
	 First incorrect byte: 0
	"Lorem ipsum"
	"test"
demo/2.t.c:56:	EQ("Lorem ipsum", "test", -1)
	 First incorrect byte: 11
	"Lorem ipsum"
	"Lorem ipsumm"
demo/2.t.c:57:	EQ("Lorem ipsum", "Lorem ipsumm", -1)
	 First incorrect byte: 0
	"Lorem ipsum"
	"lorem ipsum"
demo/2.t.c:58:	EQ("Lorem ipsum", "lorem ipsum", -1)
	 First incorrect byte: 122
	"din. Cras sit amet ligula sapien"
	"din. Cras sit amet ligula Sapien"
demo/2.t.c:60:	EQ("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut sodales consequat nulla et sollicitudin. Cras sit amet ligula sapien. In quis ultrices purus. Morbi sodales at velit vulputate aliquam.", "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut sodales consequat nulla et sollicitudin. Cras sit amet ligula Sapien. In quis ultrices purus. Morbi sodales at velit vulputate aliquam.", -1)
demo/2.t.c:45:	TEST strings
	 First incorrect byte: 10
	"Lorem ipsu"
	"Lorem ipsu"
demo/2.t.c:71:	NEQ("Lorem ipsum", "Lorem ipsum", 10)
	 First incorrect byte: 39
	" hurts."
	" hurts."
demo/2.t.c:72:	NEQ(str, str, strlen(str))
	 First incorrect byte: 16
	"The trick is not"
	"The trick is not"
demo/2.t.c:73:	NEQ(buf, buf, 16)
	 First incorrect byte: 4
	"The "
	"The "
demo/2.t.c:74:	NEQ(buf, buf, 4)
	 First incorrect byte: 4
	"The "
	"The "
demo/2.t.c:75:	NEQ(buf, str, 4)
	 First incorrect byte: 6
	"Lorem ipsu"
	"Lorem  psu"
demo/2.t.c:77:	EQ("Lorem ipsum", "Lorem  psum", 10)
	 First incorrect byte: 0
	"The tric"
	"Lorem ip"
demo/2.t.c:78:	EQ(str, "Lorem ipsum", 8)
	 First incorrect byte: 0
	"The tric"
	"Lorem ip"
demo/2.t.c:79:	EQ(buf, "Lorem ipsum", 8)
demo/2.t.c:64:	TEST buffers
demo/2.t.c:84:	Custom fail message
demo/2.t.c:82:	TEST flow
demo/2.t.c	5 fail
